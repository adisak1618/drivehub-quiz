name: Node.js CI
on:
  push:
    branches-ignore:
      - dev
      - master

env:
  NODE_VERSION_X: "14.x"
  HASURA_VERSION: "v2.7.0"

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION_X }}
      - name: Get node version
        run: |
          echo "NODE_VERSION=$(node --version)" >> $GITHUB_ENV
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache node_modules
        uses: actions/cache@v3
        id: node_modules-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-test-node-${{ env.NODE_VERSION }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --no-progress --non-interactive --prefer-offline
  lint:
    name: Lint Source
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION_X }}
      - name: Get node version
        run: |
          echo "NODE_VERSION=$(node --version)" >> $GITHUB_ENV
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache node_modules
        uses: actions/cache@v3
        id: node_modules-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-test-node-${{ env.NODE_VERSION }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --no-progress --non-interactive --prefer-offline
      - name: Lint
        run: yarn lint
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION_X }}
      - name: Get node version
        run: |
          echo "NODE_VERSION=$(node --version)" >> $GITHUB_ENV
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache node_modules
        uses: actions/cache@v3
        id: node_modules-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-test-node-${{ env.NODE_VERSION }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Cache build Web Build
        uses: actions/cache@v3
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Install dependencies
        run: yarn install --no-progress --non-interactive --prefer-offline
      - name: build
        run: yarn build
