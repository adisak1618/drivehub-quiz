name: Node.js CI
on:
  push:
    branches-ignore:
      - dev
      - master

env:
  NODE_VERSION_X: "14.x"
  HASURA_VERSION: "v2.2.1"

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:12
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      graphql-engine:
        image: hasura/graphql-engine:v2.7.0
        ports:
          - 8080:8080
        env:
          DEFAULT_DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
          HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
          HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # set to "false" to disable console
          HASURA_GRAPHQL_ADMIN_SECRET: "hasura-secret"
          HASURA_GRAPHQL_NO_OF_RETRIES: 100
          HASURA_ACTION_BASE_URL: "http://localhost:8888"
          DEFAULT_DATABASE_PG_CONNECTIONS: 10
          JWT_SECRET_KEY: "JWT_SECRET_KEY"
          HASURA_LONG_LIVED_TOKEN: "HASURA_LONG_LIVED_TOKEN"
          HASURA_ADMIN_SECRET: "hasura-secret"
          GRAPHQL_URL: "http://localhost:8080/v1/graphql"
    steps:
      - name: Hasura Health Check
        run: sleep 10 && curl -f http://localhost:8080/healthz

      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION_X }}
      - name: Get node version
        run: |
          echo "NODE_VERSION=$(node --version)" >> $GITHUB_ENV
      - name: Install dependencies
        run: yarn install --no-progress --non-interactive --prefer-offline
